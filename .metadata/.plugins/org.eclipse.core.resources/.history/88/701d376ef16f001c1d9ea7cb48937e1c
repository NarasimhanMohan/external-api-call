package com.externalapi.app.ws.controller;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

//import com.externalapi.app.ws.dbutil.DBUtil;
import com.externalapi.app.ws.model.Merchant;
import com.externalapi.app.ws.repository.MerchantRepository;

@RestController
public class ApiController {
	
	@Autowired
	MerchantRepository merchantRepository;
	//public DBUtil dbutil;
	
	 private final RestTemplate restTemplate;
	 
	 public ApiController(RestTemplateBuilder restTemplateBuilder) {
	        this.restTemplate = restTemplateBuilder.build();
	    }
	 
	 
	 @PostMapping(value="/createProduct")
		public String createPost() {
		    //String url = "https://reqres.in/api/users/";
		    String url = "https://shoppingcontent.googleapis.com/content/v2.1/{merchantId}/products";

		    // create headers
		    HttpHeaders headers = new HttpHeaders();
		    // set `content-type` header
		    headers.setContentType(MediaType.APPLICATION_JSON);
		    // set `accept` header
		    headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));

		    // create a map for post parameters
		    Map<String, Object> map = new HashMap<>();
		   map.put("userId", "mohannaresh2013@gmail.com");
		    map.put("password", "FireGuys");
		  /*  map.put("body", "Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications.");
	*/
		    // build the request
		    HttpEntity<Map<String, Object>> entity = new HttpEntity<>(map, headers);

		    System.out.println(entity);
		    // send POST request
		    //String s = restTemplate.exchange(url, HttpMethod.POST, new HttpEntity<>(createHeaders("sa", "sam")), String.class);
		    //ResponseEntity<postInsert> response = this.restTemplate.postForEntity(url, entity, postInsert.class);
		    ResponseEntity<String> response = this.restTemplate.postForEntity(url, entity, String.class, MerchantRepository.findId());
		    System.out.println(response);
		    System.out.println(response.getBody());
		    // check response status code
		    //if (response.getStatusCode() == HttpStatus.CREATED) {
		      //  return response.getBody();
		    //} else {
		     //   return null;
		    //}
		    //return response.getBody();
		    return response.getBody();
		    
		}
	 
		@GetMapping(value="/callemployees")
		private String getmerchat() {
			//String uri = "https://gorest.co.in/public/v1/users";
			Merchant merchant = new Merchant();
			String uri = "https://reqres.in/api/users/{id}";
			String response = null;
			//ArrayList arrlist = dbutil.merchatId();
			//System.out.print(arrlist);
			//ArrayList Full_result = new ArrayList();
			System.out.print(MerchantRepository.findId());
			/*int a = merchant.getId();

			System.out.print(a);*/
			RestTemplate restTemplate = new RestTemplate();
			response = restTemplate.getForObject(uri, String.class,MerchantRepository.findId());
			return response;

			//Full_result.add(response);
		}

}
